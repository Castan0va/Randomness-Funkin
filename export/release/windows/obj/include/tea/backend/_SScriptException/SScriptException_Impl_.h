// Generated by Haxe 4.3.2
#ifndef INCLUDED_tea_backend__SScriptException_SScriptException_Impl_
#define INCLUDED_tea_backend__SScriptException_SScriptException_Impl_

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS1(haxe,Exception)
HX_DECLARE_CLASS3(tea,backend,_SScriptException,SScriptException_Impl_)

namespace tea{
namespace backend{
namespace _SScriptException{


class HXCPP_CLASS_ATTRIBUTES SScriptException_Impl__obj : public ::hx::Object
{
	public:
		typedef ::hx::Object super;
		typedef SScriptException_Impl__obj OBJ_;
		SScriptException_Impl__obj();

	public:
		enum { _hx_ClassId = 0x0fbbd2e9 };

		void __construct();
		inline void *operator new(size_t inSize, bool inContainer=false,const char *inName="tea.backend._SScriptException.SScriptException_Impl_")
			{ return ::hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return ::hx::Object::operator new(inSize+extra,false,"tea.backend._SScriptException.SScriptException_Impl_"); }

		inline static ::hx::ObjectPtr< SScriptException_Impl__obj > __new() {
			::hx::ObjectPtr< SScriptException_Impl__obj > __this = new SScriptException_Impl__obj();
			__this->__construct();
			return __this;
		}

		inline static ::hx::ObjectPtr< SScriptException_Impl__obj > __alloc(::hx::Ctx *_hx_ctx) {
			SScriptException_Impl__obj *__this = (SScriptException_Impl__obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(SScriptException_Impl__obj), false, "tea.backend._SScriptException.SScriptException_Impl_"));
			*(void **)__this = SScriptException_Impl__obj::_hx_vtable;
			return __this;
		}

		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(::hx::DynamicArray inArgs);
		//~SScriptException_Impl__obj();

		HX_DO_RTTI_ALL;
		static bool __GetStatic(const ::String &inString, Dynamic &outValue, ::hx::PropertyAccess inCallProp);
		static void __register();
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("SScriptException_Impl_",11,7d,e9,82); }

		static  ::haxe::Exception _new( ::haxe::Exception exception);
		static ::Dynamic _new_dyn();

		static  ::haxe::Exception fromException( ::haxe::Exception exception);
		static ::Dynamic fromException_dyn();

		static ::String toString( ::haxe::Exception this1);
		static ::Dynamic toString_dyn();

		static ::String details( ::haxe::Exception this1);
		static ::Dynamic details_dyn();

		static ::String get_message( ::haxe::Exception this1);
		static ::Dynamic get_message_dyn();

		static  ::haxe::Exception toException( ::haxe::Exception this1);
		static ::Dynamic toException_dyn();

};

} // end namespace tea
} // end namespace backend
} // end namespace _SScriptException

#endif /* INCLUDED_tea_backend__SScriptException_SScriptException_Impl_ */ 
