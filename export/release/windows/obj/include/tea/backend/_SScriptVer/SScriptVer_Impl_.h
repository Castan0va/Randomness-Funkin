// Generated by Haxe 4.3.2
#ifndef INCLUDED_tea_backend__SScriptVer_SScriptVer_Impl_
#define INCLUDED_tea_backend__SScriptVer_SScriptVer_Impl_

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS3(tea,backend,_SScriptVer,SScriptVer_Impl_)

namespace tea{
namespace backend{
namespace _SScriptVer{


class HXCPP_CLASS_ATTRIBUTES SScriptVer_Impl__obj : public ::hx::Object
{
	public:
		typedef ::hx::Object super;
		typedef SScriptVer_Impl__obj OBJ_;
		SScriptVer_Impl__obj();

	public:
		enum { _hx_ClassId = 0x25d44945 };

		void __construct();
		inline void *operator new(size_t inSize, bool inContainer=false,const char *inName="tea.backend._SScriptVer.SScriptVer_Impl_")
			{ return ::hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return ::hx::Object::operator new(inSize+extra,false,"tea.backend._SScriptVer.SScriptVer_Impl_"); }

		inline static ::hx::ObjectPtr< SScriptVer_Impl__obj > __new() {
			::hx::ObjectPtr< SScriptVer_Impl__obj > __this = new SScriptVer_Impl__obj();
			__this->__construct();
			return __this;
		}

		inline static ::hx::ObjectPtr< SScriptVer_Impl__obj > __alloc(::hx::Ctx *_hx_ctx) {
			SScriptVer_Impl__obj *__this = (SScriptVer_Impl__obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(SScriptVer_Impl__obj), false, "tea.backend._SScriptVer.SScriptVer_Impl_"));
			*(void **)__this = SScriptVer_Impl__obj::_hx_vtable;
			return __this;
		}

		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(::hx::DynamicArray inArgs);
		//~SScriptVer_Impl__obj();

		HX_DO_RTTI_ALL;
		static bool __GetStatic(const ::String &inString, Dynamic &outValue, ::hx::PropertyAccess inCallProp);
		static void __register();
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("SScriptVer_Impl_",a5,e0,9a,f4); }

		static void __boot();
		static  ::Dynamic newerVer;
		static  ::Dynamic _new(int num1,int num2,int num3);
		static ::Dynamic _new_dyn();

		static void setVer( ::Dynamic this1,int num1,int num2,int num3);
		static ::Dynamic setVer_dyn();

		static  ::Dynamic checkVer( ::Dynamic this1);
		static ::Dynamic checkVer_dyn();

		static  ::Dynamic fromString(::String string);
		static ::Dynamic fromString_dyn();

		static ::String toString( ::Dynamic this1);
		static ::Dynamic toString_dyn();

		static int toInt( ::Dynamic this1);
		static ::Dynamic toInt_dyn();

};

} // end namespace tea
} // end namespace backend
} // end namespace _SScriptVer

#endif /* INCLUDED_tea_backend__SScriptVer_SScriptVer_Impl_ */ 
