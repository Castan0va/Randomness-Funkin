// Generated by Haxe 4.3.2
#ifndef INCLUDED_flixel_addons_ui__FlxUICursor_FlxUICursorInputFlag_Impl_
#define INCLUDED_flixel_addons_ui__FlxUICursor_FlxUICursorInputFlag_Impl_

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS4(flixel,addons,ui,_FlxUICursor,FlxUICursorInputFlag_Impl_)

namespace flixel{
namespace addons{
namespace ui{
namespace _FlxUICursor{


class HXCPP_CLASS_ATTRIBUTES FlxUICursorInputFlag_Impl__obj : public ::hx::Object
{
	public:
		typedef ::hx::Object super;
		typedef FlxUICursorInputFlag_Impl__obj OBJ_;
		FlxUICursorInputFlag_Impl__obj();

	public:
		enum { _hx_ClassId = 0x5ee5dede };

		void __construct();
		inline void *operator new(size_t inSize, bool inContainer=false,const char *inName="flixel.addons.ui._FlxUICursor.FlxUICursorInputFlag_Impl_")
			{ return ::hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return ::hx::Object::operator new(inSize+extra,false,"flixel.addons.ui._FlxUICursor.FlxUICursorInputFlag_Impl_"); }

		inline static ::hx::ObjectPtr< FlxUICursorInputFlag_Impl__obj > __new() {
			::hx::ObjectPtr< FlxUICursorInputFlag_Impl__obj > __this = new FlxUICursorInputFlag_Impl__obj();
			__this->__construct();
			return __this;
		}

		inline static ::hx::ObjectPtr< FlxUICursorInputFlag_Impl__obj > __alloc(::hx::Ctx *_hx_ctx) {
			FlxUICursorInputFlag_Impl__obj *__this = (FlxUICursorInputFlag_Impl__obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(FlxUICursorInputFlag_Impl__obj), false, "flixel.addons.ui._FlxUICursor.FlxUICursorInputFlag_Impl_"));
			*(void **)__this = FlxUICursorInputFlag_Impl__obj::_hx_vtable;
			return __this;
		}

		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(::hx::DynamicArray inArgs);
		//~FlxUICursorInputFlag_Impl__obj();

		HX_DO_RTTI_ALL;
		static bool __GetStatic(const ::String &inString, Dynamic &outValue, ::hx::PropertyAccess inCallProp);
		static void __register();
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("FlxUICursorInputFlag_Impl_",ba,be,1b,41); }

		static void __boot();
		static int KEYS_TAB;
		static int KEYS_WASD;
		static int KEYS_ARROWS;
		static int KEYS_NUMPAD;
		static int GAMEPAD_DPAD;
		static int GAMEPAD_LEFT_STICK;
		static int GAMEPAD_RIGHT_STICK;
		static int GAMEPAD_SHOULDER_BUTTONS;
		static bool has(int this1,int flag);
		static ::Dynamic has_dyn();

};

} // end namespace flixel
} // end namespace addons
} // end namespace ui
} // end namespace _FlxUICursor

#endif /* INCLUDED_flixel_addons_ui__FlxUICursor_FlxUICursorInputFlag_Impl_ */ 
