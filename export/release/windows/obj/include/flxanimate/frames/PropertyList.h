// Generated by Haxe 4.3.2
#ifndef INCLUDED_flxanimate_frames_PropertyList
#define INCLUDED_flxanimate_frames_PropertyList

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS0(Date)
HX_DECLARE_CLASS0(EReg)
HX_DECLARE_CLASS0(Xml)
HX_DECLARE_CLASS2(flxanimate,frames,PropertyList)

namespace flxanimate{
namespace frames{


class HXCPP_CLASS_ATTRIBUTES PropertyList_obj : public ::hx::Object
{
	public:
		typedef ::hx::Object super;
		typedef PropertyList_obj OBJ_;
		PropertyList_obj();

	public:
		enum { _hx_ClassId = 0x660dbd88 };

		void __construct();
		inline void *operator new(size_t inSize, bool inContainer=false,const char *inName="flxanimate.frames.PropertyList")
			{ return ::hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return ::hx::Object::operator new(inSize+extra,false,"flxanimate.frames.PropertyList"); }

		inline static ::hx::ObjectPtr< PropertyList_obj > __new() {
			::hx::ObjectPtr< PropertyList_obj > __this = new PropertyList_obj();
			__this->__construct();
			return __this;
		}

		inline static ::hx::ObjectPtr< PropertyList_obj > __alloc(::hx::Ctx *_hx_ctx) {
			PropertyList_obj *__this = (PropertyList_obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(PropertyList_obj), false, "flxanimate.frames.PropertyList"));
			*(void **)__this = PropertyList_obj::_hx_vtable;
			return __this;
		}

		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(::hx::DynamicArray inArgs);
		//~PropertyList_obj();

		HX_DO_RTTI_ALL;
		static bool __GetStatic(const ::String &inString, Dynamic &outValue, ::hx::PropertyAccess inCallProp);
		static bool __SetStatic(const ::String &inString, Dynamic &ioValue, ::hx::PropertyAccess inCallProp);
		static void __register();
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("PropertyList",73,2b,aa,ed); }

		static void __boot();
		static  ::EReg _dateRegex;
		static  ::Dynamic parse(::String text);
		static ::Dynamic parse_dyn();

		static  ::Date parseDate(::String text);
		static ::Dynamic parseDate_dyn();

		static  ::Dynamic parseDict( ::Xml node);
		static ::Dynamic parseDict_dyn();

		static  ::Dynamic parseValue( ::Xml node);
		static ::Dynamic parseValue_dyn();

};

} // end namespace flxanimate
} // end namespace frames

#endif /* INCLUDED_flxanimate_frames_PropertyList */ 
