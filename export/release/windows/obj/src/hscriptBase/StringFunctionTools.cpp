// Generated by Haxe 4.3.2
#include <hxcpp.h>

#ifndef INCLUDED_Reflect
#include <Reflect.h>
#endif
#ifndef INCLUDED_StringTools
#include <StringTools.h>
#endif
#ifndef INCLUDED_haxe_iterators_StringIterator
#include <haxe/iterators/StringIterator.h>
#endif
#ifndef INCLUDED_haxe_iterators_StringKeyValueIterator
#include <haxe/iterators/StringKeyValueIterator.h>
#endif
#ifndef INCLUDED_hscriptBase_StringFunctionTools
#include <hscriptBase/StringFunctionTools.h>
#endif

HX_LOCAL_STACK_FRAME(_hx_pos_8d7109ba3bdea643_7_getStringToolsFunction,"hscriptBase.StringFunctionTools","getStringToolsFunction",0xd29a3c92,"hscriptBase.StringFunctionTools.getStringToolsFunction","hscriptBase/StringFunctionTools.hx",7,0xf53de797)
namespace hscriptBase{

void StringFunctionTools_obj::__construct() { }

Dynamic StringFunctionTools_obj::__CreateEmpty() { return new StringFunctionTools_obj; }

void *StringFunctionTools_obj::_hx_vtable = 0;

Dynamic StringFunctionTools_obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< StringFunctionTools_obj > _hx_result = new StringFunctionTools_obj();
	_hx_result->__construct();
	return _hx_result;
}

bool StringFunctionTools_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x12a2ca56;
}

 ::Dynamic StringFunctionTools_obj::getStringToolsFunction(::String func){
            	HX_STACKFRAME(&_hx_pos_8d7109ba3bdea643_7_getStringToolsFunction)
HXLINE(   8)		bool _hx_tmp;
HXDLIN(   8)		if (::hx::IsNotNull( func )) {
HXLINE(   8)			_hx_tmp = (func.length < 1);
            		}
            		else {
HXLINE(   8)			_hx_tmp = true;
            		}
HXDLIN(   8)		if (_hx_tmp) {
HXLINE(   9)			return null();
            		}
HXLINE(  11)		::String _hx_switch_0 = func;
            		if (  (_hx_switch_0==HX_("contains",1f,5a,7b,2c)) ){
HXLINE(  13)			return ::StringTools_obj::contains_dyn();
HXDLIN(  13)			goto _hx_goto_0;
            		}
            		if (  (_hx_switch_0==HX_("hex",db,42,4f,00)) ){
HXLINE(  23)			return ::StringTools_obj::hex_dyn();
HXDLIN(  23)			goto _hx_goto_0;
            		}
            		if (  (_hx_switch_0==HX_("htmlEscape",4c,af,9b,a8)) ){
HXLINE(  15)			return ::StringTools_obj::htmlEscape_dyn();
HXDLIN(  15)			goto _hx_goto_0;
            		}
            		if (  (_hx_switch_0==HX_("htmlUnescape",25,a7,ed,ae)) ){
HXLINE(  17)			return ::StringTools_obj::htmlUnescape_dyn();
HXDLIN(  17)			goto _hx_goto_0;
            		}
            		if (  (_hx_switch_0==HX_("iterator",ee,49,9a,93)) ){
HXLINE(  27)			return ::StringTools_obj::iterator_dyn();
HXDLIN(  27)			goto _hx_goto_0;
            		}
            		if (  (_hx_switch_0==HX_("keyValueIterator",60,cd,ee,4a)) ){
HXLINE(  29)			return ::StringTools_obj::keyValueIterator_dyn();
HXDLIN(  29)			goto _hx_goto_0;
            		}
            		if (  (_hx_switch_0==HX_("lpad",67,5c,b8,47)) ){
HXLINE(  19)			return ::StringTools_obj::lpad_dyn();
HXDLIN(  19)			goto _hx_goto_0;
            		}
            		if (  (_hx_switch_0==HX_("rpad",21,a4,af,4b)) ){
HXLINE(  21)			return ::StringTools_obj::rpad_dyn();
HXDLIN(  21)			goto _hx_goto_0;
            		}
            		if (  (_hx_switch_0==HX_("unsafeCodeAt",46,e8,d6,e2)) ){
HXLINE(  25)			return ::StringTools_obj::unsafeCodeAt_dyn();
HXDLIN(  25)			goto _hx_goto_0;
            		}
            		_hx_goto_0:;
HXLINE(  32)		return ::Reflect_obj::getProperty(::hx::ClassOf< ::StringTools >(),func);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(StringFunctionTools_obj,getStringToolsFunction,return )


StringFunctionTools_obj::StringFunctionTools_obj()
{
}

bool StringFunctionTools_obj::__GetStatic(const ::String &inName, Dynamic &outValue, ::hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 22:
		if (HX_FIELD_EQ(inName,"getStringToolsFunction") ) { outValue = getStringToolsFunction_dyn(); return true; }
	}
	return false;
}

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo *StringFunctionTools_obj_sMemberStorageInfo = 0;
static ::hx::StaticInfo *StringFunctionTools_obj_sStaticStorageInfo = 0;
#endif

::hx::Class StringFunctionTools_obj::__mClass;

static ::String StringFunctionTools_obj_sStaticFields[] = {
	HX_("getStringToolsFunction",cc,b1,ea,e2),
	::String(null())
};

void StringFunctionTools_obj::__register()
{
	StringFunctionTools_obj _hx_dummy;
	StringFunctionTools_obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("hscriptBase.StringFunctionTools",e8,24,20,44);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &StringFunctionTools_obj::__GetStatic;
	__mClass->mSetStaticField = &::hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(StringFunctionTools_obj_sStaticFields);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(0 /* sMemberFields */);
	__mClass->mCanCast = ::hx::TCanCast< StringFunctionTools_obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = StringFunctionTools_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = StringFunctionTools_obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace hscriptBase
