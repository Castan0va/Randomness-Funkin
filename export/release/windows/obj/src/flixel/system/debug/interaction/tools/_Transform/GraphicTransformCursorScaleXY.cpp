// Generated by Haxe 4.3.2
#include <hxcpp.h>

#ifndef INCLUDED_flixel_system_debug_interaction_tools__Transform_GraphicTransformCursorScaleXY
#include <flixel/system/debug/interaction/tools/_Transform/GraphicTransformCursorScaleXY.h>
#endif
#ifndef INCLUDED_openfl_display_BitmapData
#include <openfl/display/BitmapData.h>
#endif
#ifndef INCLUDED_openfl_display_IBitmapDrawable
#include <openfl/display/IBitmapDrawable.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_c3ed678f849a14e2_31_new,"flixel.system.debug.interaction.tools._Transform.GraphicTransformCursorScaleXY","new",0x6ddd6519,"flixel.system.debug.interaction.tools._Transform.GraphicTransformCursorScaleXY.new","flixel/system/debug/interaction/tools/Transform.hx",31,0xb006466c)
namespace flixel{
namespace _hx_system{
namespace debug{
namespace interaction{
namespace tools{
namespace _Transform{

void GraphicTransformCursorScaleXY_obj::__construct(int width,int height, ::Dynamic transparent, ::Dynamic fillColor){
            	HX_STACKFRAME(&_hx_pos_c3ed678f849a14e2_31_new)
HXDLIN(  31)		super::__construct(width,height,transparent,fillColor);
            	}

Dynamic GraphicTransformCursorScaleXY_obj::__CreateEmpty() { return new GraphicTransformCursorScaleXY_obj; }

void *GraphicTransformCursorScaleXY_obj::_hx_vtable = 0;

Dynamic GraphicTransformCursorScaleXY_obj::__Create(::hx::DynamicArray inArgs)
{
	::hx::ObjectPtr< GraphicTransformCursorScaleXY_obj > _hx_result = new GraphicTransformCursorScaleXY_obj();
	_hx_result->__construct(inArgs[0],inArgs[1],inArgs[2],inArgs[3]);
	return _hx_result;
}

bool GraphicTransformCursorScaleXY_obj::_hx_isInstanceOf(int inClassId) {
	if (inClassId<=(int)0x073e5103) {
		return inClassId==(int)0x00000001 || inClassId==(int)0x073e5103;
	} else {
		return inClassId==(int)0x0ff9bdd7;
	}
}


::hx::ObjectPtr< GraphicTransformCursorScaleXY_obj > GraphicTransformCursorScaleXY_obj::__new(int width,int height, ::Dynamic transparent, ::Dynamic fillColor) {
	::hx::ObjectPtr< GraphicTransformCursorScaleXY_obj > __this = new GraphicTransformCursorScaleXY_obj();
	__this->__construct(width,height,transparent,fillColor);
	return __this;
}

::hx::ObjectPtr< GraphicTransformCursorScaleXY_obj > GraphicTransformCursorScaleXY_obj::__alloc(::hx::Ctx *_hx_ctx,int width,int height, ::Dynamic transparent, ::Dynamic fillColor) {
	GraphicTransformCursorScaleXY_obj *__this = (GraphicTransformCursorScaleXY_obj*)(::hx::Ctx::alloc(_hx_ctx, sizeof(GraphicTransformCursorScaleXY_obj), true, "flixel.system.debug.interaction.tools._Transform.GraphicTransformCursorScaleXY"));
	*(void **)__this = GraphicTransformCursorScaleXY_obj::_hx_vtable;
	__this->__construct(width,height,transparent,fillColor);
	return __this;
}

GraphicTransformCursorScaleXY_obj::GraphicTransformCursorScaleXY_obj()
{
}

#ifdef HXCPP_SCRIPTABLE
static ::hx::StorageInfo *GraphicTransformCursorScaleXY_obj_sMemberStorageInfo = 0;
static ::hx::StaticInfo *GraphicTransformCursorScaleXY_obj_sStaticStorageInfo = 0;
#endif

::hx::Class GraphicTransformCursorScaleXY_obj::__mClass;

void GraphicTransformCursorScaleXY_obj::__register()
{
	GraphicTransformCursorScaleXY_obj _hx_dummy;
	GraphicTransformCursorScaleXY_obj::_hx_vtable = *(void **)&_hx_dummy;
	::hx::Static(__mClass) = new ::hx::Class_obj();
	__mClass->mName = HX_("flixel.system.debug.interaction.tools._Transform.GraphicTransformCursorScaleXY",a7,e4,f4,40);
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &::hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &::hx::Class_obj::SetNoStaticField;
	__mClass->mStatics = ::hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = ::hx::Class_obj::dupFunctions(0 /* sMemberFields */);
	__mClass->mCanCast = ::hx::TCanCast< GraphicTransformCursorScaleXY_obj >;
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = GraphicTransformCursorScaleXY_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = GraphicTransformCursorScaleXY_obj_sStaticStorageInfo;
#endif
	::hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace flixel
} // end namespace system
} // end namespace debug
} // end namespace interaction
} // end namespace tools
} // end namespace _Transform
